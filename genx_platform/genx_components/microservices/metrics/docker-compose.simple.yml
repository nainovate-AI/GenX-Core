# genx_platform/genx_components/microservices/metrics/docker-compose.simple.yml
# Simplified version for testing without full monitoring stack

services:
  # Metrics Service Only
  metrics-service:
    build:
      context: ../../../  # genx_platform directory
      dockerfile: genx_components/microservices/metrics/Dockerfile
      args:
        - VERSION=${VERSION:-1.0.0}
    image: genx/metrics-service:${VERSION:-latest}
    container_name: genx-metrics-service
    hostname: metrics-service
    ports:
      - "50056:50056"  # gRPC
      - "9091:9090"    # Prometheus metrics
    environment:
      # Service Configuration
      - SERVICE_NAME=metrics-service
      - SERVICE_VERSION=${VERSION:-1.0.0}
      - SERVICE_PORT=50056
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
      
      # Disable features for simple testing
      - GRPC_TLS_ENABLED=false
      - TELEMETRY_ENABLED=false
      - REGISTRY_ENABLED=false
      - ENABLE_AUTH=false
      - RATE_LIMIT_ENABLED=false
      
      # Basic Configuration
      - GRPC_MAX_WORKERS=4
      - CACHE_TTL_SECONDS=30
      - BACKGROUND_COLLECTION_INTERVAL=30
      
    volumes:
      # Host system access for metrics collection (read-only)
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      # Disk metrics (Windows compatible paths)
      - /:/host/root:ro
      
    networks:
      - genx-network
      
    restart: unless-stopped
    
    # Run with limited privileges
    privileged: false
    cap_add:
      - SYS_PTRACE      # For process metrics
      - DAC_READ_SEARCH # For filesystem access
    
    # Resource Limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

networks:
  genx-network:
    driver: bridge