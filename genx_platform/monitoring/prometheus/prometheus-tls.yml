# genx_platform/monitoring/prometheus/prometheus-tls.yml
# Prometheus configuration with TLS enabled

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'genx-platform'
    environment: '${ENVIRONMENT:-production}'

# Alert manager configuration with TLS
alerting:
  alertmanagers:
    - scheme: https
      tls_config:
        ca_file: /certs/ca.crt
        cert_file: /certs/client.crt
        key_file: /certs/client.key
        insecure_skip_verify: false
      static_configs:
        - targets:
            - alertmanager:9093

# Load rules and alerts
rule_files:
  - /etc/prometheus/alerts/*.yml
  - /etc/prometheus/rules/*.yml

# Scrape configurations with TLS
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    scheme: https
    tls_config:
      ca_file: /certs/ca.crt
      cert_file: /certs/client.crt
      key_file: /certs/client.key
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          component: 'monitoring'

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    scheme: https
    tls_config:
      ca_file: /certs/ca.crt
      cert_file: /certs/client.crt
      key_file: /certs/client.key
    static_configs:
      - targets: ['otel-collector:8888']
        labels:
          service: 'otel-collector'
          component: 'monitoring'

  # GenX Microservices with TLS
  - job_name: 'genx-metrics-service'
    scheme: https
    tls_config:
      ca_file: /certs/ca.crt
      cert_file: /certs/client.crt
      key_file: /certs/client.key
    static_configs:
      - targets: ['metrics-service:9090']
        labels:
          service: 'metrics-service'
          component: 'genx'
          microservice: 'true'
    scrape_interval: 10s
    metrics_path: '/metrics'

  # Other monitoring services
  - job_name: 'grafana'
    scheme: https
    tls_config:
      ca_file: /certs/ca.crt
      insecure_skip_verify: true  # Grafana uses self-signed cert
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'
          component: 'monitoring'

  # Service Discovery via Consul with TLS
  - job_name: 'consul-services'
    scheme: https
    consul_sd_configs:
      - server: 'consul:8500'
        scheme: https
        tls_config:
          ca_file: /certs/ca.crt
          cert_file: /certs/client.crt
          key_file: /certs/client.key
        services: []
    relabel_configs:
      - source_labels: [__meta_consul_tags]
        regex: '.*,genx,.*'
        action: keep
      - source_labels: [__meta_consul_service]
        target_label: service